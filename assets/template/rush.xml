<rush>
    <proxy>
        <var name="PROXY_HOST">127.0.0.1</var>
        <var name="HTTP_PROXY_PORT">6152</var>
        <var name="SOCKS_PROXY_PORT">6153</var>
        <var name="HTTP_PROXY">http://${PROXY_HOST}:${HTTP_PROXY_PORT}</var>
        <var name="HTTPS_PROXY">https://${PROXY_HOST}:${HTTP_PROXY_PORT}</var>
        <var name="ALL_PROXY">socks5://${PROXY_HOST}:${SOCKS_PROXY_PORT}</var>
        <function name="pr">
            HTTP_PROXY="http://${PROXY_HOST}:${HTTP_PROXY_PORT}" \
            HTTPS_PROXY="http://${PROXY_HOST}:${HTTP_PROXY_PORT}" \
            ALL_PROXY="socks5://${PROXY_HOST}:${SOCKS_PROXY_PORT}" \
            $@
        </function>
    </proxy>
    <starship>
        <export name="STARSHIP_DIR">${RUSH_DIR}/starship</export>
        <export name="STARSHIP_BIN">${STARSHIP_DIR}/bin</export>
        <export name="STARSHIP_CONFIG">${STARSHIP_DIR}/starship.toml</export>
        <export name="STARSHIP_CACHE">${STARSHIP_DIR}/cache</export>
        <var name="STARSHIP">${STARSHIP}/starship</var>
        <eval>${STARSHIP} init zsh</eval>
    </starship>
    <antidote>
        <export name="ANTIDOTE_DIR">${RUSH_DIR}/antidote</export>
        <export name="ANTIDOTE_BIN">${RUSH_DIR}/antidote/antidote</export>
        <export name="ZDOTDIR">${ANTIDOTE_DIR}/zdotdir</export>
        <source>${ANTIDOTE_BIN}/antidote.zsh</source>
        <raw>pr antidote load</raw>
    </antidote>
    <functions>
        <function name="has">
            command -v "$1" >/dev/null 2>&amp;1
        </function>
        <function name="file_exists">
            [[ -f "$1" ]]
        </function>
        <function name="dir_exists">
            [[ -d "$1" ]]
        </function>
        <function name="link_exists">
            [[ -L "$1" ]]
        </function>
        <function name="createNodeTSStarter">
            git clone --depth=1 https://github.com/Microsoft/TypeScript-Node-Starter.git "$1"
            cd "$1" || exit 0
            npm install
        </function>
        <function name="colortest">
            T='gYw' # The test text

            echo -e "\n 40m 41m 42m 43m\
            44m 45m 46m 47m";

            for FGs in ' m' ' 1m' ' 30m' '1;30m' ' 31m' '1;31m' ' 32m' \
            '1;32m' ' 33m' '1;33m' ' 34m' '1;34m' ' 35m' '1;35m' \
            ' 36m' '1;36m' ' 37m' '1;37m';
            do FG=${FGs// /}
            echo -en " $FGs \033[$FG $T "
            for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
            do echo -en "$EINS \033[$FG\033[$BG $T \033[0m";
            done
            echo;
            done
            echo
        </function>
        <function name="cd">
            builtin cd "$@" <![CDATA[&&]]> ls
        </function>
        <function name="gi">
            curl -sLw n "https://www.toptal.com/developers/gitignore/api/$*"
        </function>
        <function name="line_cursor">
            printf "\e[5 q" > "$TTY"
        </function>
        <function name="batf">
            tail -f "$1" | bat --paging=never -l log
        </function>
    </functions>
    <aliases>
        <alias name="ls">exa -l --icons</alias>
        <alias name="la">exa -lag --icons</alias>
        <alias name="zshrc">nvim \${HOME}/.zshrc</alias>
        <alias name="zshenv">nvim \${HOME}/.zshenv</alias>
        <alias name="vimrc">nvim \${RUSH_DIR}/vim_config/.vimrc</alias>
        <alias name="nvimrc">nvim \${RUSH_DIR}/vim_config/init.vim</alias>
        <alias name="reload_shell">exec -l \${SHELL}</alias>
        <alias name="hack_attr">sudo xattr -rd com.apple.quarantine</alias>
        <alias name="az_token">az account get-access-token --resource https://ossrdbms-aad.database.windows.net --query accessToken --output tsv</alias>
        <alias name="get_id">security find-identity -v -p codesigning</alias>
        <alias name="ssh-keygen">ssh-keygen -t ed25519 -C "</alias>
        <alias name="glog">git log --oneline --topo-order --date-order --branches --tags --remotes --notes --graph</alias>
        <alias name="glogc">git log --oneline --topo-order --date-order --branches --tags --remotes --notes --decorate=no --pretty=format:%H</alias>
        <alias name="ggraph">git commit-graph write --reachable</alias>
    </aliases>
    <env>
        <export name="EDITOR">nvim</export>
        <export name="ICLOUD" os="macos">$HOME/Library/Mobile Documents/com~apple~CloudDocs</export>
        <export name="MANPAGER">sh -c 'col -bx | bat -l man'</export>
    </env>
    <dev_env>
        <home bin_path="$HOME/bin">
        </home>
        <homebrew bin_path="/opt/homebrew/bin" os="macos" arch="aarch64">
        </homebrew>
        <java bin_path="$JAVA_HOME/bin">
            <export name="JAVA_HOME" os="macos">$(/usr/libexec/java_home -v 17)</export>
        </java>
        <rust>
            <source>$HOME/.cargo/env</source>
        </rust>
        <flutter bin_path="$HOME/.pub-cache/bin">
            <export name="PUB_HOSTED_URL">https://pub.flutter-io.cn</export>
            <export name="FLUTTER_STORAGE_BASE_URL">https://storage.flutter-io.cn</export>
        </flutter>
        <ruby>
            <eval>rbenv init - zsh</eval>
            <export name="GEM_HOME">${HOME}/.gem</export>
        </ruby>
        <nodejs>
            <export name="NVM_DIR">$HOME/.nvm</export>
            <source>$NVM_DIR/nvm.sh</source>
            <eval>fnm env --use-on-cd --shell zsh</eval>
        </nodejs>
        <angular>
            <source>&lt;(ng completion script)</source>
        </angular>
        <dotnet bin_path="$DOTNET_ROOT">
            <export name="DOTNET_ROOT">/usr/local/share/dotnet</export>
        </dotnet>
        <zoxide>
            <eval>zoxide init zsh</eval>
            <export name="ZOXIDE_DIR">$RUST_DIR/zoxide</export>
            <export name="_ZO_DATA_DIR">$ZOXIDE_DIR/zo_data</export>
        </zoxide>
    </dev_env>
    <dev_lib>
    </dev_lib>

</rush>
